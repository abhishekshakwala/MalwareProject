# import tkinter as T
# from tkinter import filedialog as fd
# from tkinter import *
#
# def saveas():
#     print(text)
#     t = text.get("1.0", "end-1c")
#     savelocation=T.tkFileDialog.asksaveasfilename()
#     file1=open(savelocation, "w+")
#     file1.write(t)
#     file1.close()
#
# def retrieve_input():
#     inputValue=text.get("1.0","end-1c")
#     print(inputValue)
#
# def file_save():
#     f = fd.asksaveasfilename(initialdir = "/",title = "Select file",filetypes = (("txt file","*.txt"),("all files","*.*")))
#     if f is None: # asksaveasfile return `None` if dialog closed with "cancel".
#         return
#     text2save = str(text.get(1.0, T.END)) # starts from `1.0`, not `0.0`
#     f.write(text2save)
#     f.close()
#
# def main():
#
#     root=T.Tk("Text Editor")
#
#     text = T.Text(root)
#     text.grid()
#     menubar = T.Menu(root)
#
#     # create a pulldown menu, and add it to the menu bar
#     filemenu = T.Menu(menubar, tearoff=0)
#     filemenu.add_command(label="Open", command=lambda: retrieve_input())
#     filemenu.add_command(label="Save", command=file_save)
#     filemenu.add_separator()
#     filemenu.add_command(label="Exit", command=root.quit)
#     menubar.add_cascade(label="File", menu=filemenu)
#
#     # create more pulldown menus
#     editmenu = T.Menu(menubar, tearoff=0)
#     editmenu.add_command(label="Cut", command=saveas)
#     editmenu.add_command(label="Copy", command=saveas)
#     editmenu.add_command(label="Paste", command=saveas)
#     menubar.add_cascade(label="Edit", menu=editmenu)
#
#     helpmenu = T.Menu(menubar, tearoff=0)
#     helpmenu.add_command(label="About", command=saveas)
#     menubar.add_cascade(label="Help", menu=helpmenu)
#
#     # display the menu
#     root.config(menu=menubar)
#
#
#
#     root.mainloop()
#
# if __name__ == '__main__':
#     main()



from tkinter import *
from tkinter import filedialog

root = Tk()

def retrieve_input():
    inputValue=textBox.get("1.0","end-1c")
    return inputValue

def saveas(txt):
    savelocation=filedialog.asksaveasfilename(title = "Select file",filetypes = (("txt file","*.txt"),("all files","*.*")))
    if savelocation is None:  # asksaveasfile return `None` if dialog closed with "cancel".
        return
    file1=open(savelocation, "w+")
    file1.write(txt)
    file1.close()

def set_input(value):
    textBox.delete("1.0","end-1c")
    textBox.insert("end-1c", value)


def openFile():
    filename = filedialog.askopenfilename(title = "Select file",filetypes = (("txt file","*.txt"),("all files","*.*")))
    data=""
    with open(filename, 'r') as myfile:
        data+= myfile.read()
    set_input(data)
    print(data)

def undo():
    textBox.edit_undo()

def redo():
    textBox.edit_redo()

def main():
    global textBox
    textBox=Text(root)
    textBox.pack()

    menubar = Menu(root)

    # create a pulldown menu, and add it to the menu bar
    filemenu = Menu(menubar, tearoff=0)
    filemenu.add_command(label="Open", command=lambda: openFile())
    filemenu.add_command(label="Save", command=lambda: saveas(retrieve_input()))
    filemenu.add_separator()
    filemenu.add_command(label="Exit", command=root.quit)
    menubar.add_cascade(label="File", menu=filemenu)

    # create more pulldown menus
    editmenu = Menu(menubar, tearoff=0)
    editmenu.add_command(label="Undo", command=undo)
    editmenu.add_command(label="Redo", command=redo)
    menubar.add_cascade(label="Edit", menu=editmenu)

    helpmenu = Menu(menubar, tearoff=0)
    helpmenu.add_command(label="About", command=saveas)
    menubar.add_cascade(label="Help", menu=helpmenu)

    # display the menu
    root.config(menu=menubar)

    # buttonCommit=Button(root, height=1, width=10, text="Commit",
    #                     command=lambda: saveas(retrieve_input()))
    # #command=lambda: retrieve_input() >>> just means do this when i press the button
    # buttonCommit.pack()

    mainloop()

if __name__ == '__main__':
    main()